import pandas as pd

#datetime
dt.date
dt.year
dt.time
#datetime

#list_dataframe互转
#list转化为dataframe
para = pd.DataFrame({"Title":Pictitle,"Mean":Mean,"Std":Std})
#添加行df.append
#添加列df.assign
np.random.seed(0)
df1 = pd.DataFrame(np.random.randn(10, 4), columns=['a', 'b', 'c', 'd'])
mask = df1.applymap(lambda x: x <-0.7)
df1 = df1[-mask.any(axis=1)]
sLength = len(df1['a'])
e = pd.Series(np.random.randn(sLength))

>>> df1
          a         b         c         d
0  1.764052  0.400157  0.978738  2.240893
2 -0.103219  0.410599  0.144044  1.454274
3  0.761038  0.121675  0.443863  0.333674
7  1.532779  1.469359  0.154947  0.378163
9  1.230291  1.202380 -0.387327 -0.302303

>>> e
0   -1.048553
1   -1.420018
2   -1.706270
3    1.950775
4   -0.509652
dtype: float64

df1 = df1.assign(e=e.values)

>>> df1
          a         b         c         d         e
0  1.764052  0.400157  0.978738  2.240893 -1.048553
2 -0.103219  0.410599  0.144044  1.454274 -1.420018
3  0.761038  0.121675  0.443863  0.333674 -1.706270
7  1.532779  1.469359  0.154947  0.378163  1.950775
9  1.230291  1.202380 -0.387327 -0.302303 -0.509652

#dataframe转化为list
dataframe.tolist()
list = list(dataframe)
#list_dataframe互转

#计算相关系数
c=[2,4,6,8,10,12,14,16,18]
d= [i*2 for i in c]
print d
s1=Series(c) #转为series类型
s2=Series(d)
corr=s1.corr(s2) #计算相关系数
print corr
#计算相关系数

#取某一行
In [1]: df = DataFrame(randn(5,2),index=range(0,10,2),columns=list('AB'))
In [2]: df
Out[2]: 
          A         B
0  1.068932 -0.794307
2 -0.470056  1.192211
4 -0.284561  0.756029
6  1.037563 -0.267820
8 -0.538478 -0.800654
In [5]: df.iloc[[2]]
Out[5]: 
          A         B
4 -0.284561  0.756029
In [6]: df.loc[[2]]
Out[6]: 
          A         B
2 -0.470056  1.192211
#取某一行

#pandas.DataFrame排除特定行
indexs = list(df[np.isnan(df['just my luck'])].index)
df = df.drop(indexs)
In [3]: df = pd.DataFrame([['GD', 'GX', 'FJ'], ['SD', 'SX', 'BJ'], ['HN', 'HB'
 ...: , 'AH'], ['HEN', 'HEN', 'HLJ'], ['SH', 'TJ', 'CQ']], columns=['p1', 'p2
 ...: ', 'p3'])
In [4]: df
Out[4]:
 p1 p2 p3
0 GD GX FJ
1 SD SX BJ
2 HN HB AH
3 HEN HEN HLJ
4 SH TJ CQ
#如果只想要p1为GD和HN的两行，可以这么做：
In [8]: df[df.p1.isin(['GD', 'HN'])]
Out[8]:
 p1 p2 p3
0 GD GX FJ
2 HN HB AH
#但是如果我们想要除了这两行之外的数据，就需要绕点路了。
#原理是先把p1取出并转换为列表，然后再从列表中去不需要的行（值）去除，然后再在DataFrame中使用isin()
In [9]: ex_list = list(df.p1)
In [10]: ex_list.remove('GD')
In [11]: ex_list.remove('HN')
In [12]: ex_list
Out[12]: ['SD', 'HEN', 'SH']
In [13]: df[df.p1.isin(ex_list)]
Out[13]:
 p1 p2 p3
1 SD SX BJ
3 HEN HEN HLJ
4 SH TJ CQ
#pandas.DataFrame排除特定行

日期格式化为字符串：
from datetime import datetime
now = datetime.now()
print now.strftime('%Y-%m-%d')
字符串转换为日期:
import time
strNow = '2012-01-03'
nowDate =  time.strptime(strNow, "%Y-%m-%d")
print nowDate
日期格式化符号表
%a 星期几的简写 Weekday name, abbr.
%A 星期几的全称 Weekday name, full
%b 月分的简写 Month name, abbr.
%B 月份的全称 Month name, full
%c 标准的日期的时间串 Complete date and time representation
%d 十进制表示的每月的第几天 Day of the month
%H 24小时制的小时 Hour (24-hour clock)
%I 12小时制的小时 Hour (12-hour clock)
%j 十进制表示的每年的第几天 Day of the year
%m 十进制表示的月份 Month number
%M 十时制表示的分钟数 Minute number
%S 十进制的秒数 Second number
%U 第年的第几周，把星期日做为第一天（值从0到53）Week number (Sunday first weekday)
%w 十进制表示的星期几（值从0到6，星期天为0）weekday number
%W 每年的第几周，把星期一做为第一天（值从0到53） Week number (Monday first weekday)
%x 标准的日期串 Complete date representation (e.g. 13/01/08)
%X 标准的时间串 Complete time representation (e.g. 17:02:10)
%y 不带世纪的十进制年份（值从0到99）Year number within century
%Y 带世纪部分的十制年份 Year number
%z，%Z 时区名称，如果不能得到时区名称则返回空字符。Name of time zone
%% 百分号

1.将字符串的时间转换为时间戳
    方法:
        a = "2013-10-10 23:40:00"
        将其转换为时间数组
        import time
        timeArray = time.strptime(a, "%Y-%m-%d %H:%M:%S")
	转换为时间戳:
	timeStamp = int(time.mktime(timeArray))
	timeStamp == 1381419600
2.字符串格式更改
	如a = "2013-10-10 23:40:00",想改为 a = "2013/10/10 23:40:00"
	方法:先转换为时间数组,然后转换为其他格式
	timeArray = time.strptime(a, "%Y-%m-%d %H:%M:%S")
	otherStyleTime = time.strftime("%Y/%m/%d %H:%M:%S", timeArray)


3.时间戳转换为指定格式日期:
	方法一:
		利用localtime()转换为时间数组,然后格式化为需要的格式,如
		timeStamp = 1381419600
		timeArray = time.localtime(timeStamp)
		otherStyleTime = time.strftime("%Y-%m-%d %H:%M:%S", timeArray)
		otherStyletime == "2013-10-10 23:40:00"

	方法二:
		import datetime
		timeStamp = 1381419600
		dateArray = datetime.datetime.utcfromtimestamp(timeStamp)
		otherStyleTime = dateArray.strftime("%Y-%m-%d %H:%M:%S")
		otherStyletime == "2013-10-10 23:40:00"
 
注意：使用此方法时必须先设置好时区，否则有时差

4.获取当前时间并转换为指定日期格式
	方法一:
		import time
		获得当前时间时间戳
		now = int(time.time())  ->这是时间戳
		转换为其他日期格式,如:"%Y-%m-%d %H:%M:%S"
		timeArray = time.localtime(timeStamp)
		otherStyleTime = time.strftime("%Y-%m-%d %H:%M:%S", timeArray)

	方法二:
		import datetime
		获得当前时间
		now = datetime.datetime.now()  ->这是时间数组格式
		转换为指定的格式:
		otherStyleTime = now.strftime("%Y-%m-%d %H:%M:%S")

5.获得三天前的时间
	方法:
		import time
		import datetime
		先获得时间数组格式的日期
		threeDayAgo = (datetime.datetime.now() - datetime.timedelta(days = 3))
		转换为时间戳:
			timeStamp = int(time.mktime(threeDayAgo.timetuple()))
		转换为其他字符串格式:
			otherStyleTime = threeDayAgo.strftime("%Y-%m-%d %H:%M:%S")
	注:timedelta()的参数有:days,hours,seconds,microseconds

6.给定时间戳,计算该时间的几天前时间:
	timeStamp = 1381419600
	先转换为datetime
	import datetime
	import time
	dateArray = datetime.datetime.utcfromtimestamp(timeStamp)
	threeDayAgo = dateArray - datetime.timedelta(days = 3)
	参考5,可以转换为其他的任意格式了	
	
7. 给定日期字符串，直接转换为datetime对象
	dateStr = '2013-10-10 23:40:00'
	datetimeObj = datetime.datetime.strptime(dateStr, "%Y-%m-%d %H:%M:%S")

        注：将字符串日期转换为datetime后可以很高效的进行统计操作，因为转换为datetime后，
           可以通过datetime.timedelta()方法来前后移动时间，效率很高，而且可读性很强。

8.计算两个datetime之间的差距
a = datetime.datetime(2014,12,4,1,59,59)
b = datetime.datetime(2014,12,4,3,59,59)
diffSeconds = (b-a).total_seconds()
